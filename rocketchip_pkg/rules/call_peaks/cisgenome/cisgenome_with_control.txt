rule bam_to_sam:
	input: "04_bam_files/{sample}.sorted.dedup.bam"
	output: "03_sam_files/{sample}.sorted.dedup.sam"
	log: "00_logs/{sample}_bam_to_sam.log"
	shell: "samtools view -@ THREADS '{input}' > '{output}' 2> '{log}'"
		
rule sam_to_aln:
	input: "03_sam_files/{sample}.sorted.dedup.sam"
	output: "06_cisgenome_files/{sample}.aln"
	log: "00_logs/{sample}_sam_to_aln.log"
	shell: "'{src}'/tools/sam2aln -i '{input}' > '{output}' 2> '{log}'"

def sample_group(wildcards):
	group = Samples[wildcards.sample]
	return expand("06_cisgenome_files/{sample}.aln", sample = group)

def control_group(wildcards):
	group = Controls[wildcards.control]
	return expand("06_cisgenome_files/{sample}.aln", sample = group)
		
rule write_filelist:
	input:
		s = sample_group,
		c = control_group
	output: "06_cisgenome_files/{sample}_{control}_filelist.txt"
	run:
		for sample in input.s: shell("echo \'{sample}\t1\' >> '{output}'")
		for control in input.c: shell("echo \'{control}\t0\' >> '{output}'")

rule call_peaks:	
	input: "06_cisgenome_files/{sample}_{control}_filelist.txt"
	output:
		multiext("06_cisgenome_peaks/{sample}_{control}", "_peak.cod", "_log2fc.bar",
			"_t.bar")
	log: "00_logs/{sample}_{control}_cisgenome_peaks.log"
	shell:
		"seqpeak -i '{input}' -d 06_cisgenome_peaks -o '{wildcards.sample}_{wildcards.control}' "
		"2> '{log}'"
